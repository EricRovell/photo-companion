import { isLeapYear } from "utils/date";

import type { CityLightsSchedule } from "../types";

export const schedule: CityLightsSchedule = {
	"year": 2024,
	"city": "MOSCOW",
	"schedule": [
		16,17,8,36,
		16,19,8,36,
		16,21,8,35,
		16,23,8,34,
		16,25,8,34,
		16,27,8,32,
		16,29,8,32,
		16,31,8,31,
		16,33,8,30,
		16,35,8,29,
		16,37,8,28,
		16,39,8,27,
		16,41,8,26,
		16,43,8,25,
		16,45,8,25,
		16,47,8,23,
		16,49,8,22,
		16,51,8,21,
		16,53,8,20,
		16,55,8,19,
		16,57,8,18,
		16,59,8,17,
		17,1,8,16,
		17,3,8,15,
		17,5,8,14,
		17,7,8,13,
		17,9,8,12,
		17,11,8,11,
		17,13,8,10,
		17,15,8,9,
		17,17,8,8,
		17,18,8,6,
		17,19,8,5,
		17,20,8,4,
		17,21,8,3,
		17,23,8,1,
		17,25,7,59,
		17,27,7,59,
		17,29,7,55,
		17,31,7,52,
		17,33,7,51,
		17,35,7,49,
		17,37,7,47,
		17,39,7,45,
		17,41,7,43,
		17,43,7,41,
		17,45,7,39,
		17,47,7,37,
		17,49,7,35,
		17,51,7,33,
		17,53,7,31,
		17,55,7,29,
		17,57,7,27,
		17,59,7,25,
		18,1,7,23,
		18,3,7,21,
		18,5,7,19,
		18,7,7,17,
		18,9,7,11,
		18,14,7,9,
		18,14,7,9,
		18,15,7,7,
		18,17,7,5,
		18,19,7,3,
		18,21,7,1,
		18,23,6,59,
		18,25,6,57,
		18,27,6,55,
		18,29,6,53,
		18,31,6,50,
		18,33,6,47,
		18,35,6,44,
		18,37,6,41,
		18,39,6,38,
		18,41,6,35,
		18,43,6,32,
		18,45,6,29,
		18,47,6,26,
		18,49,6,23,
		18,51,6,20,
		18,53,6,17,
		18,55,6,14,
		18,57,6,11,
		18,59,6,8,
		19,1,6,5,
		19,3,6,2,
		19,5,5,59,
		19,7,5,56,
		19,9,5,53,
		19,12,5,50,
		19,15,5,47,
		19,16,5,44,
		19,18,5,41,
		19,20,5,39,
		19,22,5,36,
		19,24,5,33,
		19,26,5,30,
		19,28,5,27,
		19,30,5,24,
		19,32,5,21,
		19,35,5,17,
		19,37,5,15,
		19,39,5,12,
		19,41,5,8,
		19,43,5,5,
		19,45,5,1,
		19,47,4,59,
		19,49,4,56,
		19,51,4,53,
		19,53,4,50,
		19,55,4,47,
		19,57,4,44,
		19,59,4,41,
		20,1,4,38,
		20,3,4,35,
		20,5,4,31,
		20,7,4,29,
		20,9,4,26,
		20,11,4,23,
		20,13,4,20,
		20,15,4,16,
		20,17,4,13,
		20,19,4,10,
		20,21,4,7,
		20,23,4,4,
		20,25,4,1,
		20,27,3,58,
		20,29,3,55,
		20,31,3,52,
		20,33,3,49,
		20,35,3,46,
		20,37,3,43,
		20,39,3,40,
		20,41,3,37,
		20,43,3,34,
		20,45,3,31,
		20,48,3,28,
		20,51,3,25,
		20,54,3,23,
		20,57,3,21,
		20,59,3,19,
		21,1,3,17,
		21,3,3,15,
		21,5,3,13,
		21,7,3,11,
		21,9,3,7,
		21,11,3,7,
		21,13,3,6,
		21,15,3,5,
		21,17,3,4,
		21,19,3,3,
		21,21,3,2,
		21,23,3,2,
		21,25,3,1,
		21,27,3,1,
		21,29,3,1,
		21,31,3,0,
		21,33,3,0,
		21,34,3,0,
		21,35,2,59,
		21,36,2,58,
		21,37,2,58,
		21,38,2,58,
		21,39,2,57,
		21,40,2,57,
		21,41,2,57,
		21,42,2,56,
		21,44,2,56,
		21,45,2,56,
		21,46,2,55,
		21,47,2,55,
		21,48,2,54,
		21,49,2,54,
		21,50,2,54,
		21,50,2,54,
		21,50,2,53,
		21,50,2,53,
		21,50,2,52,
		21,50,2,52,
		21,50,2,51,
		21,50,2,51,
		21,50,2,50,
		21,50,2,50,
		21,49,2,51,
		21,48,2,53,
		21,46,2,55,
		21,44,2,56,
		21,42,2,59,
		21,41,3,1,
		21,40,3,3,
		21,38,3,5,
		21,36,3,7,
		21,35,3,9,
		21,33,3,11,
		21,31,3,13,
		21,29,3,15,
		21,27,3,17,
		21,25,3,19,
		21,23,3,21,
		21,21,3,23,
		21,19,3,25,
		21,17,3,27,
		21,15,3,30,
		21,13,3,31,
		21,11,3,33,
		21,9,3,35,
		21,7,3,37,
		21,5,3,39,
		21,3,3,41,
		21,1,3,43,
		20,59,3,45,
		20,57,3,47,
		20,55,3,50,
		20,55,3,51,
		20,52,3,53,
		20,49,3,55,
		20,46,3,57,
		20,43,3,59,
		20,40,4,1,
		20,37,4,4,
		20,35,4,7,
		20,33,4,10,
		20,31,4,13,
		20,29,4,16,
		20,27,4,19,
		20,24,4,22,
		20,21,4,25,
		20,18,4,27,
		20,15,4,29,
		20,12,4,32,
		20,10,4,35,
		20,8,4,38,
		20,6,4,40,
		20,4,4,42,
		20,2,4,45,
		19,59,4,47,
		19,56,4,50,
		19,53,4,53,
		19,50,4,56,
		19,47,4,59,
		19,45,5,2,
		19,43,5,5,
		19,41,5,8,
		19,39,5,11,
		19,38,5,13,
		19,36,5,15,
		19,34,5,17,
		19,32,5,19,
		19,29,5,21,
		19,26,5,23,
		19,23,5,25,
		19,20,5,27,
		19,17,5,30,
		19,14,5,31,
		19,11,5,33,
		19,8,5,35,
		19,5,5,37,
		19,3,5,40,
		19,1,5,41,
		18,59,5,43,
		18,56,5,45,
		18,53,5,47,
		18,50,5,50,
		18,47,5,51,
		18,44,5,53,
		18,41,5,55,
		18,38,5,57,
		18,36,5,59,
		18,33,6,1,
		18,30,6,3,
		18,27,6,5,
		18,24,6,7,
		18,21,6,9,
		18,18,6,11,
		18,15,6,13,
		18,12,6,15,
		18,9,6,17,
		18,6,6,19,
		18,3,6,22,
		18,0,6,23,
		17,57,6,25,
		17,54,6,27,
		17,51,6,30,
		17,48,6,31,
		17,45,6,33,
		17,43,6,35,
		17,41,6,37,
		17,39,6,40,
		17,37,6,41,
		17,35,6,43,
		17,33,6,45,
		17,31,6,47,
		17,29,6,50,
		17,27,6,51,
		17,25,6,53,
		17,23,6,55,
		17,21,6,57,
		17,19,6,59,
		17,17,7,1,
		17,15,7,3,
		17,13,7,5,
		17,11,7,7,
		17,9,7,9,
		17,7,7,11,
		17,5,7,13,
		17,3,7,15,
		17,1,7,17,
		16,59,7,19,
		16,57,7,21,
		16,55,7,23,
		16,53,7,25,
		16,51,7,27,
		16,49,7,29,
		16,47,7,31,
		16,45,7,33,
		16,43,7,35,
		16,41,7,37,
		16,39,7,39,
		16,37,7,41,
		16,36,7,43,
		16,35,7,45,
		16,34,7,47,
		16,33,7,48,
		16,32,7,51,
		16,31,7,53,
		16,30,7,55,
		16,29,7,57,
		16,28,7,59,
		16,27,8,1,
		16,26,8,3,
		16,25,8,5,
		16,24,8,7,
		16,23,8,9,
		16,22,8,11,
		16,21,8,13,
		16,20,8,15,
		16,19,8,16,
		16,18,8,17,
		16,18,8,18,
		16,18,8,19,
		16,17,8,20,
		16,17,8,21,
		16,16,8,22,
		16,16,8,23,
		16,16,8,24,
		16,16,8,25,
		16,15,8,26,
		16,15,8,27,
		16,15,8,28,
		16,15,8,29,
		16,15,8,30,
		16,14,8,31,
		16,14,8,32,
		16,14,8,33,
		16,14,8,34,
		16,13,8,35,
		16,13,8,36,
		16,13,8,36,
		16,13,8,36,
		16,13,8,36,
		16,14,8,36,
		16,14,8,36,
		16,15,8,36,
		16,15,8,36,
		16,16,8,36,
		16,16,8,36
	],
	getter: (date: Date) => {
		const days = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
		const month = date.getMonth();
		let count = date.getDate();

		if (isLeapYear(date.getFullYear())) {
			days[1] = 29;
		}

		for (let i = 0; i < month; i++) {
			count += days[i];
		}

		return (count - 1) * 4;
	}
};
